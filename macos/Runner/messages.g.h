// Autogenerated from Pigeon (v25.3.1), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>

@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

@class VLC_PLAYERLibVlcInput;
@class VLC_PLAYERLibVlcOutput;
@class VLC_PLAYERMediaInput;
@class VLC_PLAYERMediaOutput;
@class VLC_PLAYERMediaPlayerInput;
@class VLC_PLAYERMediaPlayerOutput;

@interface VLC_PLAYERLibVlcInput : NSObject
+ (instancetype)makeWithOptions:(nullable NSArray<NSString *> *)options;
@property(nonatomic, copy, nullable) NSArray<NSString *> * options;
@end

@interface VLC_PLAYERLibVlcOutput : NSObject
+ (instancetype)makeWithLibVlcId:(nullable NSNumber *)libVlcId;
@property(nonatomic, strong, nullable) NSNumber * libVlcId;
@end

@interface VLC_PLAYERMediaInput : NSObject
+ (instancetype)makeWithLibVlcId:(nullable NSNumber *)libVlcId
    dataSourceType:(nullable NSNumber *)dataSourceType
    dataSourceValue:(nullable NSString *)dataSourceValue
    packageName:(nullable NSString *)packageName
    hwAcc:(nullable NSNumber *)hwAcc
    options:(nullable NSArray<NSString *> *)options;
@property(nonatomic, strong, nullable) NSNumber * libVlcId;
@property(nonatomic, strong, nullable) NSNumber * dataSourceType;
@property(nonatomic, copy, nullable) NSString * dataSourceValue;
@property(nonatomic, copy, nullable) NSString * packageName;
@property(nonatomic, strong, nullable) NSNumber * hwAcc;
@property(nonatomic, copy, nullable) NSArray<NSString *> * options;
@end

@interface VLC_PLAYERMediaOutput : NSObject
+ (instancetype)makeWithMediaId:(nullable NSNumber *)mediaId;
@property(nonatomic, strong, nullable) NSNumber * mediaId;
@end

@interface VLC_PLAYERMediaPlayerInput : NSObject
+ (instancetype)makeWithLibVlcId:(nullable NSNumber *)libVlcId;
@property(nonatomic, strong, nullable) NSNumber * libVlcId;
@end

@interface VLC_PLAYERMediaPlayerOutput : NSObject
+ (instancetype)makeWithMediaPlayerId:(nullable NSNumber *)mediaPlayerId;
@property(nonatomic, strong, nullable) NSNumber * mediaPlayerId;
@end

/// The codec used by all APIs.
NSObject<FlutterMessageCodec> *VLC_PLAYERGetMessagesCodec(void);

@protocol VLC_PLAYERVlcApi
/// LibVLC
- (void)createLibVlcInput:(VLC_PLAYERLibVlcInput *)input completion:(void (^)(VLC_PLAYERLibVlcOutput *_Nullable, FlutterError *_Nullable))completion;
- (void)disposeLibVlcLibVlcId:(NSInteger)libVlcId completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
/// Media
- (void)createMediaInput:(VLC_PLAYERMediaInput *)input completion:(void (^)(VLC_PLAYERMediaOutput *_Nullable, FlutterError *_Nullable))completion;
- (void)mediaParseAsyncMediaId:(NSInteger)mediaId completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)disposeMediaMediaId:(NSInteger)mediaId completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
/// MediaPlayer
- (void)createMediaPlayerInput:(VLC_PLAYERMediaPlayerInput *)input completion:(void (^)(VLC_PLAYERMediaPlayerOutput *_Nullable, FlutterError *_Nullable))completion;
- (void)disposeMediaPlayerMediaPlayerId:(NSInteger)mediaPlayerId completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
@end

extern void SetUpVLC_PLAYERVlcApi(id<FlutterBinaryMessenger> binaryMessenger, NSObject<VLC_PLAYERVlcApi> *_Nullable api);

extern void SetUpVLC_PLAYERVlcApiWithSuffix(id<FlutterBinaryMessenger> binaryMessenger, NSObject<VLC_PLAYERVlcApi> *_Nullable api, NSString *messageChannelSuffix);


@interface VLC_PLAYERVlcFlutterApi : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger messageChannelSuffix:(nullable NSString *)messageChannelSuffix;
- (void)onMediaEventEvent:(NSInteger)event completion:(void (^)(FlutterError *_Nullable))completion;
@end

NS_ASSUME_NONNULL_END
